@import "true";

@import '../../scss/util/unit';

@include test-module('Units') {

  // Strip Units
  @include test('Strip Units (Unitless) [function]') {
    @include assert-equal(strip-unit(20px), 20,
      'Strips the unit from a number');
    @include assert-equal(strip-unit(20), 20,
      'Returns the same number when given a unitless value');
  }

  // Convert To Rem
  @include test('Convert To Rem [function]') {
    @include assert-equal(-zf-to-rem(32, 16), 2rem,
      'Converts a unit to the equivalent in rems');
    @include assert-equal(-zf-to-rem(3rem, 16), 3rem,
      'Keeps rem values the same');
  }

  // Rem Calculator
  @include test('Rem Calculator [function]') {
    $test: rem-calc((8 16 32 64), 16);
    $expect: 0.5rem 1rem 2rem 4rem;
    @include assert-equal($test, $expect,
      'Converts an arbitrary number of values into rem equivalents');
  }
  
  // Breakpoint to Em
  @include test('Breakpoint To Em [function]') {
    @include assert-equal(-zf-bp-to-em(16), 1em,
      'Converts a unitless value to em');
    @include assert-equal(-zf-bp-to-em(16px), 1em,
      'Converts a pixel value to em');
    @include assert-equal(-zf-bp-to-em(1rem), 1em,
      'Converts a rem value to em');
    @include assert-equal(-zf-bp-to-em(1em), 1em,
      'Converts an em value to em');
  }

}

@include report;