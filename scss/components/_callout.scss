// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

/// Defualt background color.
/// @type Color
$callout-background: #fff !default;

/// Default fade value for callout backgrounds.
/// @type Number
$callout-background-fade: 74% !default;

/// Defualt border style for callouts.
/// @type List
$callout-border: 1px solid rgba(#000, 0.25) !default;

/// Default bottom margin for callouts.
/// @type Number
$callout-margin: 0 0 1rem 0 !default;

/// Default inner padding for callouts.
/// @type Number
$callout-padding: 1rem !default;

/// Default font color for callouts.
/// @type Color
$callout-font-color: $body-font-color !default;

/// Default font color for callouts, if the callout has a dark background.
/// @type Color
$callout-font-color-alt: $body-background !default;

/// Color links to match the color of the callout.
/// @type Boolean
$callout-link-tint: true;

/// Adds basic styles for a callout, including padding and margin.
@mixin callout-base() {
  margin: $callout-margin;
  padding: $callout-padding;
  border: $callout-border;
  position: relative;

  // Respect the padding, fool.
  > :first-child { margin-top: 0; }
  > :last-child { margin-bottom: 0; }
}

/// Generate quick styles for a callout using a single color as a baseline.
/// @param {Color} $color [$callout-background] - Color to use.
@mixin callout-style($color: $callout-background) {
  $background: scale-color($color, $lightness: $callout-background-fade);
  $link-color: scale-color($color, $lightness: -10%);

  background: $background;

  @if $callout-link-tint {
    a {
      color: $link-color;

      &:hover {
        color: darken($link-color, 10%);
      }
    }
  }
}

@mixin callout($color: $callout-background) {
  @include callout-base;
  @include callout-style($color);
}

@mixin foundation-callout {
  .callout { 
    @include callout;

    @each $name, $color in $foundation-colors {
      &.#{$name} {
        @include callout-style($color);
      }
    }
  }
}
