/// Width of an off-canvas menu.
/// @type Number
$offcanvas-width: 250px;

/// Background color of an off-canvas menu.
/// @type Color
$offcanvas-background: white;

/// Z-index of an off-canvas menu.
/// @type Number
$offcanvas-zindex: 1000;

/// Length of the animation on an off-canvas menu.
/// @type Number
$offcanvas-transition-length: 0.5s;

/// Timing function of the animation on an off-canvas menu.
/// @type Keyword
$offcanvas-transition-timing: ease;

// Extra properties needed on <body> to make off-canvas work
body {
  height: 100%;
  overflow-x: hidden;
}

// Off-canvas container
.off-canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: $offcanvas-width;
  min-height: 100%;
  background: $offcanvas-width;
  transform: translateX(-$offcanvas-width);
  transition: transform $offcanvas-transition-length $offcanvas-transition-timing;
  z-index: $offcanvas-zindex;
}

// Container for page content
.main-content {
  transition: transform $offcanvas-transition-length $offcanvas-transition-timing;
}

// State class for the <body> that opens the off-canvas
.is-off-canvas-open {
  backface-visibility: hidden; // Triggers hardware acceleration

  .off-canvas {
    transform: translate3d(0, 0, 0);
  }

  .main-content {
    transform: translateX($offcanvas-width);
  }
}

// Modifier class to make off-canvas overlap instead of push main content
.off-canvas-overlap {
  &.is-off-canvas-open .main-content {
    transform: none;
  }
}

// Reveal off-canvas menu on larger screens
@each $name, $value in $breakpoint-classes {
  .reveal-for-#{$name} {
    @include breakpoint($name) {
      .off-canvas {
        transform: none;
        transition: none;
      }

      .main-content {
        padding-left: $offcanvas-width;
        transform: none;
      }
    }
  }
}

// Click-to-exit overlay (generated by JavaScript)
.js-off-canvas-exit {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: none;

  .is-off-canvas-open & {
    display: block;
  }
}
