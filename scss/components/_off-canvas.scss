/// Width of an off-canvas menu.
/// @type Number
$offcanvas-width: 250px;

/// Background color of an off-canvas menu.
/// @type Color
$offcanvas-background: white;

/// Z-index of an off-canvas menu.
/// @type Number
$offcanvas-zindex: 1000;

/// Length of the animation on an off-canvas menu.
/// @type Number
$offcanvas-transition-length: 0.5s;

/// Timing function of the animation on an off-canvas menu.
/// @type Keyword
$offcanvas-transition-timing: ease;

/// Adds baseline styles for off-canvas. This CSS is required to make the other pieces work.
@mixin off-canvas-basics {
  // Extra properties needed on <body> to make off-canvas work
  body {
    overflow-x: hidden;
    height: 100%;
  }

  // State class for the <body> that opens the off-canvas
  .is-off-canvas-open {
    backface-visibility: hidden; // Triggers hardware acceleration
  }

  // Click-to-exit overlay (generated by JavaScript)
  .js-off-canvas-exit {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: none;
    cursor: pointer;

    .is-off-canvas-open & {
      display: block;
    }
  }
}

/// Adds basic styles for an off-canvas menu.
@mixin off-canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: $offcanvas-width;
  min-height: 100%;
  background: $offcanvas-width;
  transform: translateX(-$offcanvas-width);
  transition: transform $offcanvas-transition-length $offcanvas-transition-timing;
  z-index: $offcanvas-zindex;

  .is-off-canvas-open & {
    transform: translate3d(0, 0, 0);
  }
}

/// Adds styles for the main content wrapper that sits next to the off-canvas.
@mixin main-content {
  transition: transform $offcanvas-transition-length $offcanvas-transition-timing;

  .is-off-canvas-open & {
    transform: translateX($offcanvas-width);
  }
}

/// Adds styles that reveal an off-canvas menu.
@mixin off-canvas-reveal {
  .off-canvas {
    transform: none;
    transition: none;
  }

  .main-content {
    padding-left: $offcanvas-width;
    transform: none;
  }
}

@mixin foundation-off-canvas {
  // Off-canvas container
  .off-canvas {
    @include off-canvas;
  }

  // Container for page content
  .main-content {
    @include main-content;

    // Modifier class to make off-canvas overlap instead of push main content
    .off-canvas-overlap .is-off-canvas-open & {
      transform: none;
    }
  }

  // Reveal off-canvas menu on larger screens
  @each $name, $value in $breakpoint-classes {
    .reveal-for-#{$name} {
      @include breakpoint($name) {
        @include off-canvas-reveal;
      }
    }
  }
}
