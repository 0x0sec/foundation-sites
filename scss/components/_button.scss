// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

/// Defualt padding for button.
/// @type List
$button-padding: 0.85em 1em !default;

/// Defualt margin for button.
/// @type List
$button-margin: 0 $global-padding $global-padding 0 !default;

/// Defualt fill for button. Is either solid or hollow.
/// @type Keyword
$button-fill: solid !default;

/// Defualt margin for button.
/// @type Color
$button-background: $primary-color !default;

/// Defualt margin for button.
/// @type Color
$button-background-hover: scale-color($button-background, $lightness: -15%) !default;

/// Defualt border style for button-border.
/// @type List
$button-border: 1px solid $button-background !default;

/// Defualt font color for button.
/// @type List
$button-font-color: #fff !default;

/// Defualt alternative font color for button.
/// @type List
$button-font-color-alt: #000 !default;

/// Defualt radius for button.
/// @type Number
$button-radius: 0 !default;

/// Defualt sizes for button.
/// @type List
$button-sizes: (
  tiny: 0.7,
  small: 0.8,
  medium: 1,
  large: 1.3,
  ) !default;

/// Defualt font size for button.
/// @type Number
$button-font-size: 0.9rem !default;

/// Defualt opacity for a disabled button.
/// @type List
$button-opacity-disabled: 0.5 !default;

%button {
  display: inline-block;
  border: $button-border;
  text-align: center;
  line-height: 1;
  cursor: pointer;
  -webkit-appearance: none;
  transition: all 0.25s ease-out;
  vertical-align: middle;

  padding: $button-padding;
  margin: $button-margin;
  font-size: $button-font-size;
  border-radius: $button-radius;
}

@mixin button-size($size: medium, $expand: false) {
  $size: $button-font-size * map-get($button-sizes, $size);
  font-size: $size;

  @if $expand {
    @include button-expand;
  }
}

@mixin button-expand($expand: true) {
  @if $expand {
    display: block;
    width: 100%;
    margin-left: 0;
    margin-right: 0;
  }
  @else {
    display: inline-block;
    width: auto;
    margin: $button-margin;
  }
}

@mixin button-style(
  $background: $button-background,
  $background-hover: $button-background-hover,
  $border: $button-border,
  $color: $button-font-color,
  $style: $button-fill,
  $radius: $button-radius,
  $btngroup: false
  ){

  border: $border;

  @if $style == hollow {
    border: 1px solid $background;
    background: transparent;
    color: $background;

    &:hover, &:focus {
      border-color: scale-color($background, $lightness: 25%);
      background: transparent;
      color: scale-color($background, $lightness: 25%);
    }
  }
  
  // Solid fill is the default
  @else {
    @if $color == auto {
      $color: isitlight($background);
    }

    background: $background;

    $background-lightness: lightness($background);
    @if $background-lightness >= 80% { color: $button-font-color-alt; }
    @else { color: $button-font-color; }


    &:hover, &:focus {
      @if $background-hover == auto {
        background: scale-color($background, $lightness: -15%);
      }
      @else {
        background: $background-hover;
        border-color: $background-hover;
      }
      color: $color;
    }
  }

  // @if $btngroup {
  //   border-color: $background;
  //   &:hover, &:focus {
  //     border-color: scale-color($background, $lightness: -25%);
  //   }
  // }
}

@mixin button-disabled() {
  opacity: $button-opacity-disabled;
  cursor: default;
  pointer-events: none;
}

@mixin button(
  $size: medium,
  $expand: false,
  $background: $button-background,
  $background-hover: $button-background-hover,
  $color: $button-font-color,
  $style: $button-fill,
  $radius: $button-radius
  ) {
  @extend %button;
  @include button-size($size);
  @include button-expand($expand);
  @include button-style($background, $background-hover, $color, $style);
}

.button {
  @include button;

  &.tiny   { @include button-size(tiny); }
  &.small  { @include button-size(small); }
  &.large  { @include button-size(large); }
  &.expand { @include button-expand; }

  @each $name, $color in $foundation-colors {
    //Gotta get that default style in there.
    @include button-style();

    //Getting those fancy-pants colors.
    &.#{$name} {
      @include button-style( 
        $background: scale-color( $color, $lightness: 25% ),
        $border: 1px solid scale-color( $color, $lightness: 25% ),
        $background-hover: scale-color( $color, $lightness: -30% ));
    }
  }
  
  @if $button-fill != hollow {
    &.hollow { @include button-style($style: hollow);
      @each $name, $color in $foundation-colors {
        &.#{$name} {
         @include button-style($color, $style: hollow); 
       }
     }
   }
 }

 &.disabled { @include button-disabled; }
}
