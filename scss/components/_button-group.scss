// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

/// Margin for button groups.
/// @type Number
$buttongroup-margin: 0 1rem 1rem 0;

/// Border between buttons in a button group.
/// @type Border
$buttongroup-border: 1px solid $body-background;

/// Selector for the buttons inside a button group.
/// @type String
$buttongroup-child-selector: '.button';

/// Maximum number of buttons that can be in an even-width button group.
/// @type Number
$buttongroup-expand-max: 6;

/// Add styles for a button group container.
/// @param {String} $child-selector [$buttongroup-child-selector] - Selector for the buttons inside a button group.
@mixin button-group(
  $child-selector: $buttongroup-child-selector
) {
  @include clearfix;

  margin: $buttongroup-margin;
  font-size: $button-font-size;

  #{$child-selector} {
    float: left;
    margin: 0;
    font-size: inherit;

    &:not(:last-child) {
      border-right: $buttongroup-border;
    }
  }
}

/// Changes the size of the buttons inside a button group by adjusting the font size of the container.
/// @param {Keyword} $size [medium] - Size to apply. Must be one of the named sizes in the `$button-sizes` variable.
@mixin button-group-size(
  $size: medium
) {
  $size: $button-font-size * map-get($button-sizes, $size);
  font-size: $size;
}

/// Creates a full-width button group, making each button equal width.
/// @param {Keyword|Number} $count [auto] - Number of buttons inside the button group. Set to `auto` to generate CSS that will account for a variable number of buttons.
/// @param {String} $selector [$buttongroup-child-selector] - Selector for the buttons inside a button group.
@mixin button-group-expand(
  $count: auto,
  $selector: $buttongroup-child-selector
) {
  margin-right: 0;

  #{$selector} {
    @if $count == auto {
      @for $i from 2 through $buttongroup-expand-max {
        &:nth-last-child(#{$i}):first-child,
        &:nth-last-child(#{$i}):first-child ~ #{$selector} {
          width: percentage(1 / $i);
        }
      }
    }
    @else if type-of($count) == 'number' {
      width: percentage(1 / $count);
    }
  }
}

.button-group {
  @include button-group;

  &.expand { @include button-group-expand; }

  &.tiny  { @include button-group-size(tiny); }
  &.small { @include button-group-size(small); }
  &.large { @include button-group-size(large); }

  // TODO: coloring classes
}
