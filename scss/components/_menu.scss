// Foundation for Sites by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

////
/// @group menu
////

/// Margin of a menu.
/// @type Number
$menu-margin: 0 !default;

/// Left-hand margin of a nested menu.
/// @type Number
$menu-nested-margin: 1rem !default;

/// Padding for items in a pill menu.
/// @type Number
$menu-pills-padding: 0.7rem 1rem !default;

/// margin for items in a simple menu.
/// @type Number
$menu-simple-margin: 1rem !default;

/// Text color of an active menu item.
/// @type Color
$menu-item-color-active: $white !default;

/// Background color of an active menu item.
/// @type Color
$menu-item-background-active: get-color(primary) !default;

/// Spacing between an icon and text in a menu item.
/// @type Number
$menu-icon-spacing: 0.25rem !default;

/// Background color for an hovered menu item.
/// @type Color
$menu-item-background-hover: $light-gray !default;

/// Creates the base styles for a Menu.
@mixin menu-base {
  padding: 0;
  margin: 0;
  list-style: none;
  position: relative;

  @if $global-flexbox {
    display: flex;
    flex-wrap: nowrap;
    align-items: center;
    width: 100%;
  }

  li {
    @include disable-mouse-outline;
  }

  a {
    line-height: 1;
    text-decoration: none;
    white-space: nowrap;
  }

  // Reset styles of inner elements
  input,
  select,
  a,
  button {
    margin-bottom: 0;
  }
}

/// Expands the items of a Menu, so each item is the same width.
@mixin menu-expand {
  @if $global-flexbox {
    li {
      flex: 1 1 0px; // sass-lint:disable-line zero-unit
    }
  }
  @else {
    display: table;
    width: 100%;

    li {
      display: table-cell;
      vertical-align: middle;
    }
  }
}

/// Align menu items.
@mixin menu-align($alignment) {
  @if $alignment == center {
    @if $global-flexbox {
      li {
        justify-content: center;
      }
    }
    @else {
      text-align: center;

      li {
        text-align: $global-left;
      }
    }
  }
  @else if $alignment == right {
    @if $global-flexbox {
      justify-content: flex-end;
    }
    @else {
      text-align: $global-right;

      li {
        text-align: $global-left;
      }
    }
  }
}

/// Sets the direction of a Menu.
/// @param {Keyword} $dir [horizontal] - Direction of the Menu. Can be `horizontal` or `vertical`.
@mixin menu-direction($dir: horizontal) {
  @if $dir == horizontal {
    @if $global-flexbox {
      flex-wrap: nowrap;

      li {
        flex: 0 0 auto;
      }
    }
    @else {
      li {
        display: inline-block;
      }

      a {
        display: inline-block;
      }
    }
  }
  @else if $dir == vertical {
    @if $global-flexbox {
      flex-wrap: wrap;

      li {
        flex: 0 0 100%;
        max-width: 100%;
      }

      a {
        justify-content: flex-start;
        align-items: flex-start;
      }
    }
    @else {
      li {
        display: block;
      }

      a {
        display: block;
      }
    }
  }
  @else {
    @warn 'The direction used for menu-direction() must be horizontal or vertical.';
  }
}

/// Creates a simple Menu, which has no padding or hover state.
/// @param {Keyword} $dir [$global-left] - Direction of the menu. This effects the side of the <li> that receives the margin.
/// @param {Number} $margin [$menu-simple-margin] - The margin to apply to each <li>.
@mixin menu-simple($dir: $global-left, $margin: $menu-simple-margin) {
  li + li {
    margin-#{$dir}: $margin;
  }
}

/// Creates a simple padded Menu.
/// @param {Number} $padding [$menu-pills-padding] - Padding of each menu item.
@mixin menu-pills($padding: $menu-pills-padding) {
  a {
    padding: $padding;
  }
}

/// Adds styles for a nested Menu, by adding `margin-left` to the menu.
/// @param {Keyword|Number} $padding [auto] - Length of the margin.
@mixin menu-nested($margin: $menu-nested-margin) {
  margin-#{$global-left}: $margin;
}

@mixin foundation-menu {
  .menu {
    @include menu-base;

    // Default orientation: horizontal
    &, &.horizontal {
      @include menu-direction(horizontal);
    }

    // Even-width modifier for horizontal orientation
    &.expanded {
      @include menu-expand;
    }

    // Vertical orientation modifier
    &.vertical {
      @include menu-direction(vertical);
    }

    @include -zf-each-breakpoint($small: false) {
      &.#{$-zf-size}-vertical {
        @include menu-direction(vertical);
      }

      &.#{$-zf-size}-horizontal {
        @include menu-direction(horizontal);
      }
    }

    // Simple
    &.simple {
      @include menu-simple;
    }

    // Pills
    &.pills {
      @include menu-pills;
    }

    // Nesting
    &.nested {
      @include menu-nested;
    }

    // Active state
    .active > a {
      background: $menu-item-background-active;
      color: $menu-item-color-active;
    }

    // Align center
    .align-center {
      @include menu-align(center);
    }

    // Align right
    .align-#{$global-right} {
      @include menu-align(right);
    }
  }

  // Prevent FOUC when using the Responsive Menu plugin
  .no-js [data-responsive-menu] ul {
    display: none;
  }
}
