// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

// Temporary!
// scss-lint:disable all

/// Global width of your site. Used by the grid to determine row width.
$global-width: rem-calc(1000) !default;

/// Font size attribute applied to `<html>` and `<body>`. We use 100% by default so the value is inherited from the user's browser settings.
/// @type Number
$global-font-size: 100% !default;

/// Default line height for all type. `$global-lineheight` is 24px while `$global-font-size` is 16px
/// @type Number
$global-lineheight: 1.5 !default;

/// Primary color for interactive components like links and buttons.
/// @type Color
$primary-color: #008CBA !default;

/// Secondary color, used with components that support the `.secondary` class.
/// @type Color
$secondary-color: #e7e7e7 !default;

/// Color to indicate a negative status or action, used with the `.alert` class.
/// @type Color
$alert-color: #f04124 !default;

/// Color to indicate a positive status or action, used with the `.success` class.
/// @type Color
$success-color: #43AC6A !default;

/// Color to indicate a caution status or action, used with the `.warning` class.
/// @type Color
$warning-color: #f08a24 !default;

/// Color used for light gray ui items within Foundation
/// @type Color
$light-gray: #f1f1f1 !default;

/// Color used for medium gray ui items within Foundation
/// @type Color
$medium-gray: #cacaca !default;

/// Color used for dark gray ui items within Foundation
/// @type Color
$dark-gray: #8a8a8a !default;

/// Color used for black ui items within Foundation
/// @type Color
$black: #0a0a0a !default;

/// Color used for white ui items within Foundation
/// @type Color
$white: #fefefe !default;

/// Background color of the body.
/// @type Color
$body-background: #fff !default;

/// Text color of the body.
/// @type Color
$body-font-color: #222 !default;

/// Font stack of the body.
/// @type List
$body-font-family: "Helvetica Neue", Helvetica, Roboto, Arial, sans-serif !default;

/// Set to `true` to enable antialiased type, using the `-webkit-font-smoothing` and `-moz-osx-font-smoothing` CSS properties.
/// @type Boolean
$body-antialiased: true !default;

/// Text direction for the document. Set to `rtl` to reverse the orientation and direction of all components.
/// @type Keyword
$text-direction: ltr !default;

/// Global value used for padding on components.
/// @type Number
$global-padding: 1rem !default;

/// Global font weight used for normal type.
/// @type Keyword | Number
$global-weight-normal: normal !default;

/// Global font weight used for bold type.
/// @type Keyword | Number
$global-weight-bold: bold !default;

/// Global value used for elements that have a border radius.
/// @type Number
$global-radius: 3px !default;

/// Global value used for elements that have a rounded appearance.
/// @type Number
$global-rounded: 1000px !default;

/// Namespace for the data attributes used to initialize Foundation plugins.
/// @type String | Boolean
$global-namespace: false !default;

// Reverse text direction if needed
$default-float: left;
$opposite-direction: right;
@if $text-direction == rtl {
  $default-float: right;
  $opposite-direction: left;
}

// Internal map used to iterate through colors, to generate CSS classes with less code
$foundation-colors: (
  primary: $primary-color,
  secondary: $secondary-color,
  alert: $alert-color,
  success: $success-color,
  warning: $warning-color,
);

// The go-away list
$cursor-auto-value: auto !default;
$cursor-crosshair-value: crosshair !default;
$cursor-default-value: default !default;
$cursor-disabled-value: not-allowed !default;
$cursor-pointer-value: pointer !default;
$cursor-help-value: help !default;
$cursor-text-value: text !default;
$info-color: #a0d3e8 !default;

@mixin foundation-global-styles {
  // Must be height: 100% for off-canvas to work
  html,
  body {
    height: 100%;
    font-size: $global-font-size;
    box-sizing: border-box;
  }

  // Set box-sizing globally to handle padding and border widths
  *,
  *:before,
  *:after {
    box-sizing: inherit;
  }

  // Default body styles
  body {
    padding: 0;
    margin: 0;
    font-family: $body-font-family;
    font-weight: $global-weight-normal;
    line-height: $global-lineheight;
    color: $body-font-color;
    background: $body-background;

    @if ($body-antialiased) {
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
  }

  img {
    // Grid defaults to get images and embeds to work properly
    max-width: 100%;
    height: auto;
    -ms-interpolation-mode: bicubic;

    // Get rid of gap under images by making them display: inline-block; by default
    display: inline-block;
    vertical-align: middle;
  }

  // Make sure textarea takes on height automatically
  textarea {
    height: auto;
    min-height: 50px;
  }

  // Make select elements are 100% width by default
  select {
    width: 100%;
  }

  // Styles Google Maps embeds properly
  #map_canvas,
  .map_canvas {
    img,
    embed,
    object {
      max-width: none !important;
    }
  }

  // Reset button styles
  button {
    -webkit-appearance: none;
       -moz-appearance: none;
    background: transparent;
    padding: 0;
    border: 0;
    line-height: 1;
  }
}
