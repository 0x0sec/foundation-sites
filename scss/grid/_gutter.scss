// Foundation for Sites by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

////
/// @group grid
////

/// Get a gutter size for a given breakpoint
/// @param {Keyword} $breakpoint [small] - Breakpoint name.
/// @param {Number|Map} $gutters [$grid-column-gutter] - Gutter map or single value to use. Responsive gutter settings by default.
///
/// @returns {Number} Gutter size.
@function grid-column-gutter(
  $breakpoint: $-zf-zero-breakpoint,
  $gutters: $grid-column-gutter
) {
  // If gutter is single value, return it
  @if type-of($gutters) == 'number' {
    @return $gutters;
  }

  // Else, return the corresponding responsive value
  @return -zf-get-bp-val($gutters, $breakpoint);
}

/// Set the gutters on a column
/// @param {Number|Keyword} $gutters [small] - Spacing between columns or breakpoint name.
/// @param {Number|Map} $gutters [$grid-column-gutter] - Gutter map or single value to use. Responsive gutter settings by default.
@mixin grid-column-gutter(
  $gutter: $-zf-zero-breakpoint,
  $gutters: $grid-column-gutter
) {
  @if type-of($gutter) == 'string' {
    $gutter: grid-column-gutter($gutter, $gutters);
  }
  $padding: rem-calc($gutter) / 2;

  padding-left: $padding;
  padding-right: $padding;
}

/// Collapse the gutters on a column by removing the padding. **Note:** only use this mixin within a breakpoint. To collapse a column's gutters on all screen sizes, use the `$gutter` parameter of the `grid-column()` mixin instead.
@mixin grid-column-collapse {
  @include grid-column-gutter(0);
}

/// Shorthand for `grid-column-gutter()`.
/// @alias grid-column-gutter
@mixin grid-col-gutter($gutters) {
  @include grid-column-gutter($gutters);
}

/// Shorthand for `grid-column-collapse()`.
/// @alias grid-column-collapse
@mixin grid-col-collapse {
  @include grid-column-collapse;
}
