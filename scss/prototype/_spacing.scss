// Foundation for Sites by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

////
/// @group prototype-spacing
////

/// Map containing all the `spacing` classes
/// @type Map
$prototype-spacing: (
  margin: m, 
  padding: p
) !default;

/// Default value of the spacing multiplier (pixels)
/// @type Number
$prototype-spacing-multiplier: 10 !default;

/// Default value for `prototype-spacer`
/// @type Number
$prototype-spacer: rem-calc($prototype-spacing-multiplier) !default;

/// Default value for Horizontal spacing. 
/// @type Boolean
$prototype-spacer-x: $prototype-spacer !default;

/// Default value for Vertical spacing. 
/// @type Boolean
$prototype-spacer-y: $prototype-spacer !default;

/// Map containing all values of Horizontal and vertical spacing, defaulted to null. 
/// @type Map
$prototype-spacers: () !default;

/// Default number of spacers count
/// @type Number
$prototype-spacers-count: 5 !default;

/// Margin helper mixin
/// @param {Number} $top [null] - Margin Top
/// @param {Number} $right [null] - Margin Right
/// @param {Number} $bottom [null] - Margin Bottom
/// @param {Number} $left [null] - Margin Left
@mixin margin(
  $top: null, 
  $right: null, 
  $bottom: null, 
  $left: null
) {
  @if $top != null {
    margin-top: $top !important;
  }
  @if $right != null {
    margin-right: $right !important;
  }
  @if $bottom != null {
    margin-bottom: $bottom !important;
  }
  @if $left != null {
    margin-left: $left !important;
  }
}

/// Padding helper mixin
/// @param {Number} $top [null] - Padding Top
/// @param {Number} $right [null] - Padding Right
/// @param {Number} $bottom [null] - Padding Bottom
/// @param {Number} $left [null] - Padding Left
@mixin padding(
  $top: null, 
  $right: null, 
  $bottom: null, 
  $left: null
) {
  @if $top != null {
    padding-top: $top !important;
  }
  @if $right != null {
    padding-right: $right !important;
  }
  @if $bottom != null {
    padding-bottom: $bottom !important;
  }
  @if $left != null {
    padding-left: $left !important;
  }
}

// Looping through prototype spacers
@for $i from 0 through $prototype-spacers-count {
  $prototype-spacers: map-merge($prototype-spacers, (
    $i: (
      x: $prototype-spacer-x * $i,
      y: $prototype-spacer-y * $i
    )
  )) 
}

@mixin foundation-prototype-spacing {
  @each $prop, $abbrev in $prototype-spacing {
    @each $size, $lengths in $prototype-spacers {
      $length-x:   map-get($lengths, x);
      $length-y:   map-get($lengths, y);
      
      $size: ($size * $prototype-spacing-multiplier);

      // Margin & Padding
      .#{$abbrev}-a-#{$size} { 
        #{$prop}: $length-y $length-x !important; 
      } // a = All sides
      .#{$abbrev}-t-#{$size} { 
        #{$prop}-top: $length-y !important; 
      } // t = top
      .#{$abbrev}-r-#{$size} { 
        #{$prop}-right: $length-x !important; 
      } // r = right
      .#{$abbrev}-b-#{$size} { 
        #{$prop}-bottom: $length-y !important; 
      } // b = bottom
      .#{$abbrev}-l-#{$size} { 
        #{$prop}-left: $length-x !important; 
      } // l = left

      // Axes
      .#{$abbrev}-x-#{$size} {
        #{$prop}-right: $length-x !important;
        #{$prop}-left: $length-x !important;
      } // x = Horizontal Line
      .#{$abbrev}-y-#{$size} {
        #{$prop}-top: $length-y !important;
        #{$prop}-bottom: $length-y !important;
      } // y = vertical line
    }
  }
}
