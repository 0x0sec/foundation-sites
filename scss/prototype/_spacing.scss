// Foundation for Sites by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

////
/// @group prototype-spacing
////

/// Map containing all the `spacing` classes
/// @type Map
$prototype-spacing-classes: (
  margin: m, 
  padding: p
) !default;

/// Default value for `prototype-spacer`
/// @type Number
$prototype-spacer: rem-calc(10px) !default;

/// Default value for Horizontal spacing. 
/// @type Boolean
$prototype-spacer-x: $prototype-spacer !default;

/// Default value for Vertical spacing. 
/// @type Boolean
$prototype-spacer-y: $prototype-spacer !default;

/// Map containing all values of Horizontal and vertical spacing, defaulted to null. 
/// @type Map
$prototype-spacers: () !default;

/// Default number of spacers count
/// @type Number
$prototype-spacers-n: 5 !default;

// Looping through prototype spacers
@for $i from 0 through $prototype-spacers-n {
  $prototype-spacers: map-merge($prototype-spacers, (
    $i: (
      x: $prototype-spacer-x * $i,
      y: $prototype-spacer-y * $i
    )
  )) 
}

@mixin foundation-prototype-spacing {

  @each $prop, $abbrev in $prototype-spacing-classes {
    @each $size, $lengths in $prototype-spacers {
      $length-x:   map-get($lengths, x);
      $length-y:   map-get($lengths, y);
      
      // Multiply `$size` by 10
      $size: ($size * 10);

      // Positive Margin & Padding
      .#{$abbrev}-a-#{$size} { 
        #{$prop}: $length-y $length-x !important; 
      } // a = All sides
      .#{$abbrev}-t-#{$size} { 
        #{$prop}-top: $length-y !important; 
      } // t = top
      .#{$abbrev}-r-#{$size} { 
        #{$prop}-right: $length-x !important; 
      } // r = right
      .#{$abbrev}-b-#{$size} { 
        #{$prop}-bottom: $length-y !important; 
      } // b = bottom
      .#{$abbrev}-l-#{$size} { 
        #{$prop}-left: $length-x !important; 
      } // l = left

      // Axes
      .#{$abbrev}-x-#{$size} {
        #{$prop}-right: $length-x !important;
        #{$prop}-left: $length-x !important;
      } // x = Horizontal Line
      .#{$abbrev}-y-#{$size} {
        #{$prop}-top: $length-y !important;
        #{$prop}-bottom: $length-y !important;
      } // y = vertical line

      // Negative margin
      @if ($prop == margin ) {

        .#{$abbrev}-a-#{$size}n { 
          #{$prop}: ($length-y * -1) ($length-x * -1) !important; 
        } // a = All sides
        .#{$abbrev}-t-#{$size}n { 
          #{$prop}-top: ($length-y * -1) !important; 
        } // t = top
        .#{$abbrev}-r-#{$size}n { 
          #{$prop}-right: ($length-x * -1) !important; 
        } // r = right
        .#{$abbrev}-b-#{$size}n { 
          #{$prop}-bottom: ($length-y * -1) !important; 
        } // b = bottom
        .#{$abbrev}-l-#{$size}n { 
          #{$prop}-left: ($length-x * -1) !important; 
        } // l = left

        // Axes
        .#{$abbrev}-x-#{$size}n {
          #{$prop}-right: ($length-x * -1) !important;
          #{$prop}-left: ($length-x * -1) !important;
        } // x = Horizontal Line
        .#{$abbrev}-y-#{$size}n {
          #{$prop}-top: ($length-y * -1) !important;
          #{$prop}-bottom: ($length-y * -1) !important;
        } // y = vertical line
      }
    }
  }
}
