// Foundation for Sites by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

////
/// @group prototype-list-style-type
////

/// Responsive breakpoints for list styling types
/// @type Boolean
$prototype-list-breakpoints: $global-prototype-breakpoints !default;

/// Map containing all the `style-type-unordered` classes
/// @type Map
$prototype-style-type-unordered-classes: (
  disc, circle, square
) !default;

// Map containing all the `style-type-ordered` classes
// @type Map
$prototype-style-type-ordered-classes: (
  decimal, lower-alpha, lower-latin, lower-roman, upper-alpha, upper-latin, upper-roman
) !default;

@mixin style-type-unordered($style-type-unordered) {
  list-style-type: $style-type-unordered;
}

@mixin style-type-ordered($style-type-ordered) {
  list-style-type: $style-type-ordered;
}

@mixin list-unordered {
  @each $style-type-unordered in $prototype-style-type-unordered-classes {
    ul.list-#{$style-type-unordered} {
      @include style-type-unordered($style-type-unordered);
    }
  }

  @if ($prototype-list-breakpoints) {
    // Loop through Responsive Breakpoints
    @each $size in $breakpoint-classes {
      @include breakpoint($size) {
        @each $style-type-unordered in $prototype-style-type-unordered-classes {
          @if $size != $-zf-zero-breakpoint {
            ul.#{$size}-list-#{$style-type-unordered} {
              @include style-type-unordered($style-type-unordered);
            }
          }
        }
      }
    }
  }
}

@mixin list-ordered {
  @each $style-type-ordered in $prototype-style-type-ordered-classes {
    ol.list-#{$style-type-ordered} {
      @include style-type-ordered($style-type-ordered);
    }
  }

  @if ($prototype-list-breakpoints) {
    // Loop through Responsive Breakpoints
    @each $size in $breakpoint-classes {
      @include breakpoint($size) {
        @each $style-type-ordered in $prototype-style-type-ordered-classes {
          @if $size != $-zf-zero-breakpoint {
            ol.#{$size}-list-#{$style-type-ordered} {
              @include style-type-ordered($style-type-ordered);
            }
          }
        }
      }
    }
  }
}

@mixin foundation-prototype-list-style-type {
  @include list-unordered;
  @include list-ordered;
}
