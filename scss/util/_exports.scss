/*doc
---
title: Exports
name: exports
category: exports
---

The exporter module ensures that the CSS classes for components aren't output twice, if the module is imported more than once using `@import`.
*/

////
/// @group exports
////

/// A list of components that output CSS. Set a component's value to `true` to include the built-in classes for that module in your finished CSS. Even if a component's value is set to `false`, you can still use its mixins.
/// @type Map
$exports-list: () !default;

/// A list of components that have already been exported. This prevents CSS classes from being duplicated if a module is imported twice.
/// @type List
$exports-used: () !default;

/// Checks if a module is in use.
/// @param {string} $name - Name of component to look for.
/// @returns {Boolean} `true` if the module is being used, `false` if not.
@function using($name) {
  $module-key: map-get($exports-list, $name);
  // Module has already been used
  @if $module-key == true {
    @return true;
  }
  // Module isn't on the component list
  @else if $module-key == null {
    @warn 'using(): no component named "#{$name}" was found.';
    @return false;
  }
  // Module isn't being used
  @else {
    @return false;
  }
}

/// Checks if a module's CSS has already been exported.
/// @param {string} $name - Name of component to look for.
/// @returns {Boolean} `true` if the component has already been imported, `false` if not.
@function imported($name) {
  // Check if the module is already on the imported list
  @if type-of(index($exports-used, $name)) == 'number' {
    @return true;
  }
  @else {
    @return false;
  }
}

/// Outputs the chunk of content passed if component $name hasn't yet been output.
/// This prevents code duplication by keeping track of which components have already been output.
/// @param {string} $name - Name of component to output
/// @output The content passed, if the component has not yet been exported.
@mixin export($name) {
  @if using($name) {
    @if not imported($name) {
      
    }
  }
  // Check if the module is on the exports list and hasn't already been exported
  @if not imported($name) and using($name) {
    $exports-used: append($exports-used, $name) !global;
    @content;
  }
}
